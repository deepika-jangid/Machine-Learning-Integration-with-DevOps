# -*- coding: utf-8 -*-
"""My Model of MNIST

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11xGG-DFiNt4zFepOXZDQSHjAK6C5AD3X
"""

#Here we are importing MNIST dataset
from keras.datasets import mnist

#Dataset is downloading from Internet
dataset = mnist.load_data('mymnist.db')

#It shows the length of Dataset
len(dataset)

#Hence the len of dataset is 2 , that's why we gave it name as 'train' to one part and 'test' to another part.
train , test = dataset

#Again we check the len of train part in Dataset
len(train)

#We gave it name as X_train and y_train
X_train , y_train = train

X_train.shape

#We gave it name as X_test and y_test
X_test , y_test = test

X_test.shape

#Reshaping the shapes of X_train and X_test from 2D to 1D
X_train_1d = X_train.reshape(-1 , 28*28)
X_test_1d = X_test.reshape(-1 , 28*28)

X_train_1d.shape

X_test_1d.shape

#Changing the datatype from int to float
X_train = X_train_1d.astype('float32')
X_test = X_test_1d.astype('float32')

#Converting y_train to categorical variable
from keras.utils.np_utils import to_categorical
y_train_cat = to_categorical(y_train)
y_train_cat

from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import RMSprop 
#model build
model = Sequential()
#Adding layers to the model
model.add(Dense(units=128, activation='relu'))
model.add(Dense(units=32, activation='relu'))
model.add(Dense(units=10, activation='softmax'))
#compilation of model 
model.compile(optimizer=RMSprop(), loss='categorical_crossentropy', metrics=['accuracy'])

#Fitting data to our build model
h = model.fit(X_train, y_train_cat, epochs=10)

model.summary()

model.save("my_model.h5")

